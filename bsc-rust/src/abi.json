[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_initializationContractAddress",
        "type": "address"
      },
      { "internalType": "bytes", "name": "_calldata", "type": "bytes" }
    ],
    "name": "InitializationFunctionReverted",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "facetAddress", "type": "address" },
          {
            "internalType": "enum IDiamondCut.FacetCutAction",
            "name": "action",
            "type": "uint8"
          },
          {
            "internalType": "bytes4[]",
            "name": "functionSelectors",
            "type": "bytes4[]"
          }
        ],
        "indexed": false,
        "internalType": "struct IDiamondCut.FacetCut[]",
        "name": "_diamondCut",
        "type": "tuple[]"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "_init",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "_calldata",
        "type": "bytes"
      }
    ],
    "name": "DiamondCut",
    "type": "event"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "facetAddress", "type": "address" },
          {
            "internalType": "enum IDiamondCut.FacetCutAction",
            "name": "action",
            "type": "uint8"
          },
          {
            "internalType": "bytes4[]",
            "name": "functionSelectors",
            "type": "bytes4[]"
          }
        ],
        "internalType": "struct IDiamondCut.FacetCut[]",
        "name": "_diamondCut",
        "type": "tuple[]"
      },
      { "internalType": "address", "name": "_init", "type": "address" },
      { "internalType": "bytes", "name": "_calldata", "type": "bytes" }
    ],
    "name": "diamondCut",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes4", "name": "_functionSelector", "type": "bytes4" }
    ],
    "name": "facetAddress",
    "outputs": [
      { "internalType": "address", "name": "facetAddress_", "type": "address" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "facetAddresses",
    "outputs": [
      { "internalType": "address[]", "name": "facetAddresses_", "type": "address[]" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "_facet", "type": "address" }],
    "name": "facetFunctionSelectors",
    "outputs": [
      {
        "internalType": "bytes4[]",
        "name": "facetFunctionSelectors_",
        "type": "bytes4[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "facets",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "facetAddress", "type": "address" },
          {
            "internalType": "bytes4[]",
            "name": "functionSelectors",
            "type": "bytes4[]"
          }
        ],
        "internalType": "struct IDiamondLoupe.Facet[]",
        "name": "facets_",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "previousAdminRole",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "newAdminRole",
        "type": "bytes32"
      }
    ],
    "name": "RoleAdminChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "RoleGranted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "RoleRevoked",
    "type": "event"
  },
  {
    "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }],
    "name": "getRoleAdmin",
    "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "role", "type": "bytes32" },
      { "internalType": "uint256", "name": "index", "type": "uint256" }
    ],
    "name": "getRoleMember",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }],
    "name": "getRoleMemberCount",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "role", "type": "bytes32" },
      { "internalType": "address", "name": "account", "type": "address" }
    ],
    "name": "grantRole",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "role", "type": "bytes32" },
      { "internalType": "address", "name": "account", "type": "address" }
    ],
    "name": "hasRole",
    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "role", "type": "bytes32" },
      { "internalType": "address", "name": "account", "type": "address" }
    ],
    "name": "renounceRole",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "role", "type": "bytes32" },
      { "internalType": "address", "name": "account", "type": "address" }
    ],
    "name": "revokeRole",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Paused",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Unpaused",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "pause",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "paused",
    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "unpause",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "CloseTradeRemoveLiquidity",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenAddress", "type": "address" },
      { "internalType": "uint16", "name": "feeBasisPoints", "type": "uint16" },
      { "internalType": "uint16", "name": "taxBasisPoints", "type": "uint16" },
      { "internalType": "bool", "name": "stable", "type": "bool" },
      { "internalType": "bool", "name": "dynamicFee", "type": "bool" },
      { "internalType": "bool", "name": "asMargin", "type": "bool" },
      { "internalType": "bool", "name": "asBet", "type": "bool" },
      { "internalType": "uint16[]", "name": "weights", "type": "uint16[]" }
    ],
    "name": "addToken",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16[]", "name": "weights", "type": "uint16[]" }
    ],
    "name": "changeWeight",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "amount", "type": "uint256" }
    ],
    "name": "decrease",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "amount", "type": "uint256" }
    ],
    "name": "decreaseByCloseTrade",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "token", "type": "address" },
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          { "internalType": "uint8", "name": "decimals", "type": "uint8" }
        ],
        "internalType": "struct ITradingClose.SettleToken[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenAddress", "type": "address" }
    ],
    "name": "getTokenByAddress",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "tokenAddress", "type": "address" },
          { "internalType": "uint16", "name": "weight", "type": "uint16" },
          { "internalType": "uint16", "name": "feeBasisPoints", "type": "uint16" },
          { "internalType": "uint16", "name": "taxBasisPoints", "type": "uint16" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "bool", "name": "dynamicFee", "type": "bool" },
          { "internalType": "bool", "name": "asMargin", "type": "bool" },
          { "internalType": "bool", "name": "asBet", "type": "bool" }
        ],
        "internalType": "struct IVault.Token",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenAddress", "type": "address" }
    ],
    "name": "getTokenForPrediction",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "token", "type": "address" },
          { "internalType": "bool", "name": "switchOn", "type": "bool" },
          { "internalType": "uint8", "name": "decimals", "type": "uint8" },
          { "internalType": "uint256", "name": "price", "type": "uint256" }
        ],
        "internalType": "struct IVault.MarginToken",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenAddress", "type": "address" }
    ],
    "name": "getTokenForTrading",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "token", "type": "address" },
          { "internalType": "bool", "name": "switchOn", "type": "bool" },
          { "internalType": "uint8", "name": "decimals", "type": "uint8" },
          { "internalType": "uint256", "name": "price", "type": "uint256" }
        ],
        "internalType": "struct IVault.MarginToken",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTotalValueUsd",
    "outputs": [{ "internalType": "int256", "name": "", "type": "int256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "amount", "type": "uint256" }
    ],
    "name": "increase",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
    "name": "itemValue",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "tokenAddress", "type": "address" },
          { "internalType": "int256", "name": "value", "type": "int256" },
          { "internalType": "uint8", "name": "decimals", "type": "uint8" },
          { "internalType": "int256", "name": "valueUsd", "type": "int256" },
          { "internalType": "uint16", "name": "targetWeight", "type": "uint16" },
          { "internalType": "uint16", "name": "feeBasisPoints", "type": "uint16" },
          { "internalType": "uint16", "name": "taxBasisPoints", "type": "uint16" },
          { "internalType": "bool", "name": "dynamicFee", "type": "bool" }
        ],
        "internalType": "struct LpItem",
        "name": "lpItem",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "maxWithdrawAbleUsd",
    "outputs": [{ "internalType": "int256", "name": "", "type": "int256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenAddress", "type": "address" },
      { "internalType": "uint16[]", "name": "weights", "type": "uint16[]" }
    ],
    "name": "removeToken",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "tokensV3",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "tokenAddress", "type": "address" },
          { "internalType": "uint16", "name": "weight", "type": "uint16" },
          { "internalType": "uint16", "name": "feeBasisPoints", "type": "uint16" },
          { "internalType": "uint16", "name": "taxBasisPoints", "type": "uint16" },
          { "internalType": "bool", "name": "stable", "type": "bool" },
          { "internalType": "bool", "name": "dynamicFee", "type": "bool" },
          { "internalType": "bool", "name": "asMargin", "type": "bool" },
          { "internalType": "bool", "name": "asBet", "type": "bool" }
        ],
        "internalType": "struct IVault.Token[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalValue",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "tokenAddress", "type": "address" },
          { "internalType": "int256", "name": "value", "type": "int256" },
          { "internalType": "uint8", "name": "decimals", "type": "uint8" },
          { "internalType": "int256", "name": "valueUsd", "type": "int256" },
          { "internalType": "uint16", "name": "targetWeight", "type": "uint16" },
          { "internalType": "uint16", "name": "feeBasisPoints", "type": "uint16" },
          { "internalType": "uint16", "name": "taxBasisPoints", "type": "uint16" },
          { "internalType": "bool", "name": "dynamicFee", "type": "bool" }
        ],
        "internalType": "struct LpItem[]",
        "name": "lpItems",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenAddress", "type": "address" },
      { "internalType": "uint16", "name": "feeBasisPoints", "type": "uint16" },
      { "internalType": "uint16", "name": "taxBasisPoints", "type": "uint16" },
      { "internalType": "bool", "name": "dynamicFee", "type": "bool" }
    ],
    "name": "updateToken",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenAddress", "type": "address" },
      { "internalType": "bool", "name": "asMargin", "type": "bool" },
      { "internalType": "bool", "name": "asBet", "type": "bool" }
    ],
    "name": "updateTokenFeature",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }],
    "name": "addReserves",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "apxPoolInfo",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "totalStaked", "type": "uint256" },
          { "internalType": "uint256", "name": "apxPerBlock", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "lastRewardBlock",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "accAPXPerShare", "type": "uint256" },
          { "internalType": "uint256", "name": "totalReward", "type": "uint256" },
          { "internalType": "uint256", "name": "reserves", "type": "uint256" }
        ],
        "internalType": "struct IApxReward.ApxPoolInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "_rewardsToken", "type": "address" },
      { "internalType": "uint256", "name": "_apxPerBlock", "type": "uint256" },
      { "internalType": "uint256", "name": "_startBlock", "type": "uint256" }
    ],
    "name": "initializeApxRewardFacet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "_account", "type": "address" }],
    "name": "pendingApx",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "_apxPerBlock", "type": "uint256" }
    ],
    "name": "updateApxPerBlock",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "address", "name": "priceFeed", "type": "address" }
    ],
    "name": "addChainlinkPriceFeed",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "chainlinkPriceFeeds",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "token", "type": "address" },
          { "internalType": "address", "name": "feedAddress", "type": "address" },
          { "internalType": "string", "name": "description", "type": "string" },
          { "internalType": "uint8", "name": "decimals", "type": "uint8" }
        ],
        "internalType": "struct IOraclePrice.PriceFeedInfo[]",
        "name": "priceFeeds",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
    "name": "getPriceFromChainlink",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "price", "type": "uint256" },
          { "internalType": "uint8", "name": "decimals", "type": "uint8" }
        ],
        "internalType": "struct IOraclePrice.PriceInfo",
        "name": "priceInfo",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
    "name": "removeChainlinkPriceFeed",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "requestId", "type": "bytes32" }
    ],
    "name": "NonexistentRequestId",
    "type": "error"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "requestId", "type": "bytes32" },
          { "internalType": "uint64", "name": "price", "type": "uint64" }
        ],
        "internalType": "struct IPriceFacade.PriceCallbackParam[]",
        "name": "params",
        "type": "tuple[]"
      }
    ],
    "name": "batchRequestPriceCallback",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint64", "name": "price", "type": "uint64" }
    ],
    "name": "confirmTriggerPrice",
    "outputs": [
      { "internalType": "bool", "name": "available", "type": "bool" },
      { "internalType": "uint64", "name": "upper", "type": "uint64" },
      { "internalType": "uint64", "name": "lower", "type": "uint64" }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
    "name": "getPrice",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPriceFacadeConfig",
    "outputs": [
      {
        "components": [
          { "internalType": "uint16", "name": "lowPriceGapP", "type": "uint16" },
          { "internalType": "uint16", "name": "highPriceGapP", "type": "uint16" },
          { "internalType": "uint16", "name": "maxDelay", "type": "uint16" },
          {
            "internalType": "uint16",
            "name": "triggerLowPriceGapP",
            "type": "uint16"
          },
          {
            "internalType": "uint16",
            "name": "triggerHighPriceGapP",
            "type": "uint16"
          }
        ],
        "internalType": "struct IPriceFacade.Config",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
    "name": "getPriceFromCacheOrOracle",
    "outputs": [
      { "internalType": "uint64", "name": "price", "type": "uint64" },
      { "internalType": "uint40", "name": "updatedAt", "type": "uint40" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "lowPriceGapP", "type": "uint16" },
      { "internalType": "uint16", "name": "highPriceGapP", "type": "uint16" },
      { "internalType": "uint16", "name": "maxPriceDelay", "type": "uint16" }
    ],
    "name": "initPriceFacadeFacet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "enum RequestType", "name": "requestType", "type": "uint8" }
    ],
    "name": "requestPrice",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "requestId", "type": "bytes32" },
      { "internalType": "uint64", "name": "price", "type": "uint64" }
    ],
    "name": "requestPriceCallback",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "lowPriceGapP", "type": "uint16" },
      { "internalType": "uint16", "name": "highPriceGapP", "type": "uint16" }
    ],
    "name": "setLowAndHighPriceGapP",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint16", "name": "maxDelay", "type": "uint16" }],
    "name": "setMaxDelay",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "triggerLowPriceGapP", "type": "uint16" },
      { "internalType": "uint16", "name": "triggerHighPriceGapP", "type": "uint16" }
    ],
    "name": "setTriggerLowAndHighPriceGapP",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "user", "type": "address" },
      { "internalType": "uint256", "name": "dueDate", "type": "uint256" }
    ],
    "name": "CoolingOffPeriod",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "current", "type": "uint256" },
      { "internalType": "uint256", "name": "deadline", "type": "uint256" }
    ],
    "name": "ExpiredSignature",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "target", "type": "uint256" },
      { "internalType": "uint256", "name": "actual", "type": "uint256" }
    ],
    "name": "InsufficientALPOutput",
    "type": "error"
  },
  {
    "inputs": [{ "internalType": "int256", "name": "amountUsd", "type": "int256" }],
    "name": "InsufficientLiquidityPool",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "target", "type": "uint256" },
      { "internalType": "uint256", "name": "actual", "type": "uint256" }
    ],
    "name": "InsufficientTokenOutput",
    "type": "error"
  },
  { "inputs": [], "name": "InvalidAmount", "type": "error" },
  { "inputs": [], "name": "InvalidSignature", "type": "error" },
  {
    "inputs": [
      { "internalType": "uint256", "name": "currentChainId", "type": "uint256" },
      { "internalType": "uint256", "name": "unsupportedChainId", "type": "uint256" }
    ],
    "name": "UnsupportedChain",
    "type": "error"
  },
  {
    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
    "name": "UnsupportedToken",
    "type": "error"
  },
  { "inputs": [], "name": "ZeroAddress", "type": "error" },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "tokenOut",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "alpAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amountOut",
        "type": "uint256"
      }
    ],
    "name": "BurnAlp",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "tokenOut",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amountOut",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokenOutPrice",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "burnFeeUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "alpAmount",
        "type": "uint256"
      }
    ],
    "name": "BurnFee",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "BurnRemoveLiquidity",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "MintAddLiquidity",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "tokenIn",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amountIn",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "alpOut",
        "type": "uint256"
      }
    ],
    "name": "MintAlp",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "tokenIn",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amountIn",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokenInPrice",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "mintFeeUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "alpAmount",
        "type": "uint256"
      }
    ],
    "name": "MintFee",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Paused",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "supported",
        "type": "bool"
      }
    ],
    "name": "SupportedFreeBurn",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Unpaused",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "ALP",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
    "name": "addFreeBurnWhitelist",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "alpPrice",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenOut", "type": "address" },
      { "internalType": "uint256", "name": "alpAmount", "type": "uint256" },
      { "internalType": "uint256", "name": "minOut", "type": "uint256" },
      { "internalType": "address", "name": "receiver", "type": "address" }
    ],
    "name": "burnAlp",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "alpAmount", "type": "uint256" },
      { "internalType": "uint256", "name": "minOut", "type": "uint256" },
      { "internalType": "address payable", "name": "receiver", "type": "address" }
    ],
    "name": "burnAlpBNB",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "alpAmount", "type": "uint256" },
      { "internalType": "uint256", "name": "minOut", "type": "uint256" },
      { "internalType": "address", "name": "receiver", "type": "address" },
      { "internalType": "bytes", "name": "message", "type": "bytes" },
      { "internalType": "bytes", "name": "signature", "type": "bytes" }
    ],
    "name": "burnAlpWithSignature",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "coolingDuration",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getSigner",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "alpToken", "type": "address" },
      { "internalType": "address", "name": "signer", "type": "address" }
    ],
    "name": "initAlpManagerFacet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
    "name": "isFreeBurn",
    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
    "name": "lastMintedTimestamp",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "tokenIn", "type": "address" },
      { "internalType": "uint256", "name": "amountIn", "type": "uint256" },
      { "internalType": "uint256", "name": "minAlp", "type": "uint256" },
      { "internalType": "bool", "name": "stake", "type": "bool" }
    ],
    "name": "mintAlp",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "minAlp", "type": "uint256" },
      { "internalType": "bool", "name": "stake", "type": "bool" }
    ],
    "name": "mintAlpBNB",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "amountIn", "type": "uint256" },
      { "internalType": "uint256", "name": "minAlp", "type": "uint256" },
      { "internalType": "bool", "name": "stake", "type": "bool" },
      { "internalType": "bytes", "name": "message", "type": "bytes" },
      { "internalType": "bytes", "name": "signature", "type": "bytes" }
    ],
    "name": "mintAlpWithSignature",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
    "name": "removeFreeBurnWhitelist",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "coolingDuration_", "type": "uint256" }
    ],
    "name": "setCoolingDuration",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "signer", "type": "address" }],
    "name": "setSigner",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Paused",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Unpaused",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "claimAllReward",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "_stakingToken", "type": "address" }
    ],
    "name": "initializeStakeRewardFacet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "_amount", "type": "uint256" }],
    "name": "stake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "_user", "type": "address" }],
    "name": "stakeOf",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalStaked",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "_amount", "type": "uint256" }],
    "name": "unStake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint16",
        "name": "index",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "openFeeP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "closeFeeP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "shareP",
        "type": "uint24"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "minCloseFeeP",
        "type": "uint24"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "name",
        "type": "string"
      }
    ],
    "name": "AddFeeConfig",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "totalFee",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "daoAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "brokerId",
        "type": "uint24"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "brokerAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "alpPoolAmount",
        "type": "uint256"
      }
    ],
    "name": "CloseFee",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "totalFee",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "daoAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "brokerId",
        "type": "uint24"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "brokerAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "alpPoolAmount",
        "type": "uint256"
      }
    ],
    "name": "OpenFee",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "totalFee",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "daoAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "brokerId",
        "type": "uint24"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "brokerAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "alpPoolAmount",
        "type": "uint256"
      }
    ],
    "name": "PredictionCloseFee",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "totalFee",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "daoAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "brokerId",
        "type": "uint24"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "brokerAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "alpPoolAmount",
        "type": "uint256"
      }
    ],
    "name": "PredictionOpenFee",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint16",
        "name": "index",
        "type": "uint16"
      }
    ],
    "name": "RemoveFeeConfig",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "oldDaoRepurchase",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "daoRepurchase",
        "type": "address"
      }
    ],
    "name": "SetDaoRepurchase",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "oldRevenueAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "revenueAddress",
        "type": "address"
      }
    ],
    "name": "SetRevenueAddress",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint16",
        "name": "index",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "openFeeP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "closeFeeP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "shareP",
        "type": "uint24"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "minCloseFeeP",
        "type": "uint24"
      }
    ],
    "name": "UpdateFeeConfig",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "operator",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "WithdrawRevenue",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "index", "type": "uint16" },
      { "internalType": "string", "name": "name", "type": "string" },
      { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
      { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
      { "internalType": "uint24", "name": "shareP", "type": "uint24" },
      { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
    ],
    "name": "addFeeConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "closeFee", "type": "uint256" },
      { "internalType": "uint24", "name": "broker", "type": "uint24" }
    ],
    "name": "chargeCloseFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "openFee", "type": "uint256" },
      { "internalType": "uint24", "name": "broker", "type": "uint24" }
    ],
    "name": "chargeOpenFee",
    "outputs": [{ "internalType": "uint24", "name": "", "type": "uint24" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "closeFee", "type": "uint256" },
      { "internalType": "uint24", "name": "broker", "type": "uint24" }
    ],
    "name": "chargePredictionCloseFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "openFee", "type": "uint256" },
      { "internalType": "uint24", "name": "broker", "type": "uint24" }
    ],
    "name": "chargePredictionOpenFee",
    "outputs": [{ "internalType": "uint24", "name": "", "type": "uint24" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "feeAddress",
    "outputs": [
      { "internalType": "address", "name": "daoRepurchase", "type": "address" },
      { "internalType": "address", "name": "revenueAddress", "type": "address" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint16", "name": "index", "type": "uint16" }],
    "name": "getFeeConfigByIndex",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "uint16", "name": "index", "type": "uint16" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
          { "internalType": "bool", "name": "enable", "type": "bool" },
          { "internalType": "uint24", "name": "shareP", "type": "uint24" },
          { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
        ],
        "internalType": "struct LibFeeManager.FeeConfig",
        "name": "",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "address", "name": "base", "type": "address" },
          {
            "internalType": "enum IPairsManager.PairType",
            "name": "pairType",
            "type": "uint8"
          },
          {
            "internalType": "enum IPairsManager.PairStatus",
            "name": "status",
            "type": "uint8"
          }
        ],
        "internalType": "struct IPairsManager.PairSimple[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address[]", "name": "tokens", "type": "address[]" }
    ],
    "name": "getFeeDetails",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "total", "type": "uint256" },
          { "internalType": "uint256", "name": "daoAmount", "type": "uint256" },
          { "internalType": "uint256", "name": "brokerAmount", "type": "uint256" },
          { "internalType": "uint256", "name": "alpPoolAmount", "type": "uint256" }
        ],
        "internalType": "struct IFeeManager.FeeDetail[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "daoRepurchase", "type": "address" },
      { "internalType": "address", "name": "revenueAddress", "type": "address" }
    ],
    "name": "initFeeManagerFacet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint16", "name": "index", "type": "uint16" }],
    "name": "removeFeeConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address[]", "name": "tokens", "type": "address[]" }
    ],
    "name": "revenues",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "token", "type": "address" },
          { "internalType": "uint256", "name": "total", "type": "uint256" },
          { "internalType": "uint256", "name": "pending", "type": "uint256" }
        ],
        "internalType": "struct CommissionInfo[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "daoRepurchase", "type": "address" }
    ],
    "name": "setDaoRepurchase",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "revenueAddress", "type": "address" }
    ],
    "name": "setRevenueAddress",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "index", "type": "uint16" },
      { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
      { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
      { "internalType": "uint24", "name": "shareP", "type": "uint24" },
      { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
    ],
    "name": "updateFeeConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address[]", "name": "tokens", "type": "address[]" }
    ],
    "name": "withdrawRevenue",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      { "internalType": "string", "name": "name", "type": "string" },
      {
        "internalType": "enum IPairsManager.PairType",
        "name": "pairType",
        "type": "uint8"
      },
      {
        "internalType": "enum IPairsManager.PairStatus",
        "name": "status",
        "type": "uint8"
      },
      {
        "components": [
          { "internalType": "uint256", "name": "maxLongOiUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxShortOiUsd", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "fundingFeePerBlockP",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "minFundingFeeR", "type": "uint256" },
          { "internalType": "uint256", "name": "maxFundingFeeR", "type": "uint256" }
        ],
        "internalType": "struct PairMaxOiAndFundingFeeConfig",
        "name": "pairConfig",
        "type": "tuple"
      },
      { "internalType": "uint16", "name": "slippageConfigIndex", "type": "uint16" },
      { "internalType": "uint16", "name": "feeConfigIndex", "type": "uint16" },
      {
        "components": [
          { "internalType": "uint256", "name": "notionalUsd", "type": "uint256" },
          { "internalType": "uint16", "name": "tier", "type": "uint16" },
          { "internalType": "uint16", "name": "maxLeverage", "type": "uint16" },
          { "internalType": "uint16", "name": "initialLostP", "type": "uint16" },
          { "internalType": "uint16", "name": "liqLostP", "type": "uint16" }
        ],
        "internalType": "struct LibPairsManager.LeverageMargin[]",
        "name": "leverageMargins",
        "type": "tuple[]"
      },
      { "internalType": "uint40", "name": "longHoldingFeeRate", "type": "uint40" },
      { "internalType": "uint40", "name": "shortHoldingFeeRate", "type": "uint40" }
    ],
    "name": "addPair",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "base", "type": "address" },
          {
            "internalType": "uint256",
            "name": "fundingFeePerBlockP",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "minFundingFeeR", "type": "uint256" },
          { "internalType": "uint256", "name": "maxFundingFeeR", "type": "uint256" }
        ],
        "internalType": "struct IPairsManager.UpdatePairFundingFeeConfigParam[]",
        "name": "params",
        "type": "tuple[]"
      }
    ],
    "name": "batchUpdatePairFundingFeeConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "base", "type": "address" },
          { "internalType": "uint256", "name": "maxLongOiUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxShortOiUsd", "type": "uint256" }
        ],
        "internalType": "struct IPairsManager.UpdatePairMaxOiParam[]",
        "name": "params",
        "type": "tuple[]"
      }
    ],
    "name": "batchUpdatePairMaxOi",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum IPairsManager.PairType",
        "name": "pairType",
        "type": "uint8"
      },
      {
        "internalType": "enum IPairsManager.PairStatus",
        "name": "status",
        "type": "uint8"
      }
    ],
    "name": "batchUpdatePairStatus",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "getPairByBaseV4",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "address", "name": "base", "type": "address" },
          { "internalType": "uint16", "name": "basePosition", "type": "uint16" },
          {
            "internalType": "enum IPairsManager.PairType",
            "name": "pairType",
            "type": "uint8"
          },
          {
            "internalType": "enum IPairsManager.PairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint256", "name": "maxLongOiUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxShortOiUsd", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "fundingFeePerBlockP",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "minFundingFeeR", "type": "uint256" },
          { "internalType": "uint256", "name": "maxFundingFeeR", "type": "uint256" },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "notionalUsd",
                "type": "uint256"
              },
              { "internalType": "uint16", "name": "tier", "type": "uint16" },
              { "internalType": "uint16", "name": "maxLeverage", "type": "uint16" },
              { "internalType": "uint16", "name": "initialLostP", "type": "uint16" },
              { "internalType": "uint16", "name": "liqLostP", "type": "uint16" }
            ],
            "internalType": "struct LibPairsManager.LeverageMargin[]",
            "name": "leverageMargins",
            "type": "tuple[]"
          },
          {
            "internalType": "uint16",
            "name": "slippageConfigIndex",
            "type": "uint16"
          },
          { "internalType": "uint16", "name": "slippagePosition", "type": "uint16" },
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              {
                "internalType": "uint256",
                "name": "onePercentDepthAboveUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "onePercentDepthBelowUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint16",
                "name": "slippageLongP",
                "type": "uint16"
              },
              {
                "internalType": "uint16",
                "name": "slippageShortP",
                "type": "uint16"
              },
              { "internalType": "uint16", "name": "index", "type": "uint16" },
              {
                "internalType": "enum SlippageType",
                "name": "slippageType",
                "type": "uint8"
              },
              { "internalType": "bool", "name": "enable", "type": "bool" },
              {
                "internalType": "uint256",
                "name": "longThresholdUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "shortThresholdUsd",
                "type": "uint256"
              }
            ],
            "internalType": "struct LibPairsManager.SlippageConfig",
            "name": "slippageConfig",
            "type": "tuple"
          },
          { "internalType": "uint16", "name": "feeConfigIndex", "type": "uint16" },
          { "internalType": "uint16", "name": "feePosition", "type": "uint16" },
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              { "internalType": "uint16", "name": "index", "type": "uint16" },
              { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
              { "internalType": "bool", "name": "enable", "type": "bool" },
              { "internalType": "uint24", "name": "shareP", "type": "uint24" },
              { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
            ],
            "internalType": "struct LibFeeManager.FeeConfig",
            "name": "feeConfig",
            "type": "tuple"
          },
          {
            "internalType": "uint40",
            "name": "longHoldingFeeRate",
            "type": "uint40"
          },
          {
            "internalType": "uint40",
            "name": "shortHoldingFeeRate",
            "type": "uint40"
          }
        ],
        "internalType": "struct IPairsManager.PairView",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "getPairConfig",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "maxLongOiUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxShortOiUsd", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "fundingFeePerBlockP",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "minFundingFeeR", "type": "uint256" },
          { "internalType": "uint256", "name": "maxFundingFeeR", "type": "uint256" }
        ],
        "internalType": "struct PairMaxOiAndFundingFeeConfig",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "getPairFeeConfig",
    "outputs": [
      {
        "components": [
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
          { "internalType": "uint24", "name": "shareP", "type": "uint24" },
          { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
        ],
        "internalType": "struct IPairsManager.FeeConfig",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "getPairForTrading",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "base", "type": "address" },
          { "internalType": "string", "name": "name", "type": "string" },
          {
            "internalType": "enum IPairsManager.PairType",
            "name": "pairType",
            "type": "uint8"
          },
          {
            "internalType": "enum IPairsManager.PairStatus",
            "name": "status",
            "type": "uint8"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "maxLongOiUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "maxShortOiUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "fundingFeePerBlockP",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "minFundingFeeR",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "maxFundingFeeR",
                "type": "uint256"
              }
            ],
            "internalType": "struct PairMaxOiAndFundingFeeConfig",
            "name": "pairConfig",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "notionalUsd",
                "type": "uint256"
              },
              { "internalType": "uint16", "name": "maxLeverage", "type": "uint16" },
              { "internalType": "uint16", "name": "initialLostP", "type": "uint16" },
              { "internalType": "uint16", "name": "liqLostP", "type": "uint16" }
            ],
            "internalType": "struct IPairsManager.LeverageMargin[]",
            "name": "leverageMargins",
            "type": "tuple[]"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "onePercentDepthAboveUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "onePercentDepthBelowUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint16",
                "name": "slippageLongP",
                "type": "uint16"
              },
              {
                "internalType": "uint16",
                "name": "slippageShortP",
                "type": "uint16"
              },
              {
                "internalType": "uint256",
                "name": "longThresholdUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "shortThresholdUsd",
                "type": "uint256"
              },
              {
                "internalType": "enum SlippageType",
                "name": "slippageType",
                "type": "uint8"
              }
            ],
            "internalType": "struct SlippageConfigView",
            "name": "slippageConfig",
            "type": "tuple"
          },
          {
            "components": [
              { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
              { "internalType": "uint24", "name": "shareP", "type": "uint24" },
              { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
            ],
            "internalType": "struct IPairsManager.FeeConfig",
            "name": "feeConfig",
            "type": "tuple"
          }
        ],
        "internalType": "struct IPairsManager.TradingPair",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      { "internalType": "bool", "name": "isLong", "type": "bool" }
    ],
    "name": "getPairHoldingFeeRate",
    "outputs": [
      { "internalType": "uint40", "name": "holdingFeeRate", "type": "uint40" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "getPairSlippageConfig",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "onePercentDepthAboveUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthBelowUsd",
            "type": "uint256"
          },
          { "internalType": "uint16", "name": "slippageLongP", "type": "uint16" },
          { "internalType": "uint16", "name": "slippageShortP", "type": "uint16" },
          {
            "internalType": "uint256",
            "name": "longThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "enum SlippageType",
            "name": "slippageType",
            "type": "uint8"
          }
        ],
        "internalType": "struct SlippageConfigView",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "pairsV4",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "address", "name": "base", "type": "address" },
          { "internalType": "uint16", "name": "basePosition", "type": "uint16" },
          {
            "internalType": "enum IPairsManager.PairType",
            "name": "pairType",
            "type": "uint8"
          },
          {
            "internalType": "enum IPairsManager.PairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint256", "name": "maxLongOiUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxShortOiUsd", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "fundingFeePerBlockP",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "minFundingFeeR", "type": "uint256" },
          { "internalType": "uint256", "name": "maxFundingFeeR", "type": "uint256" },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "notionalUsd",
                "type": "uint256"
              },
              { "internalType": "uint16", "name": "tier", "type": "uint16" },
              { "internalType": "uint16", "name": "maxLeverage", "type": "uint16" },
              { "internalType": "uint16", "name": "initialLostP", "type": "uint16" },
              { "internalType": "uint16", "name": "liqLostP", "type": "uint16" }
            ],
            "internalType": "struct LibPairsManager.LeverageMargin[]",
            "name": "leverageMargins",
            "type": "tuple[]"
          },
          {
            "internalType": "uint16",
            "name": "slippageConfigIndex",
            "type": "uint16"
          },
          { "internalType": "uint16", "name": "slippagePosition", "type": "uint16" },
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              {
                "internalType": "uint256",
                "name": "onePercentDepthAboveUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "onePercentDepthBelowUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint16",
                "name": "slippageLongP",
                "type": "uint16"
              },
              {
                "internalType": "uint16",
                "name": "slippageShortP",
                "type": "uint16"
              },
              { "internalType": "uint16", "name": "index", "type": "uint16" },
              {
                "internalType": "enum SlippageType",
                "name": "slippageType",
                "type": "uint8"
              },
              { "internalType": "bool", "name": "enable", "type": "bool" },
              {
                "internalType": "uint256",
                "name": "longThresholdUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "shortThresholdUsd",
                "type": "uint256"
              }
            ],
            "internalType": "struct LibPairsManager.SlippageConfig",
            "name": "slippageConfig",
            "type": "tuple"
          },
          { "internalType": "uint16", "name": "feeConfigIndex", "type": "uint16" },
          { "internalType": "uint16", "name": "feePosition", "type": "uint16" },
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              { "internalType": "uint16", "name": "index", "type": "uint16" },
              { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
              { "internalType": "bool", "name": "enable", "type": "bool" },
              { "internalType": "uint24", "name": "shareP", "type": "uint24" },
              { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
            ],
            "internalType": "struct LibFeeManager.FeeConfig",
            "name": "feeConfig",
            "type": "tuple"
          },
          {
            "internalType": "uint40",
            "name": "longHoldingFeeRate",
            "type": "uint40"
          },
          {
            "internalType": "uint40",
            "name": "shortHoldingFeeRate",
            "type": "uint40"
          }
        ],
        "internalType": "struct IPairsManager.PairView[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "removePair",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bool", "name": "openSafeMode", "type": "bool" },
      { "internalType": "address[]", "name": "bases", "type": "address[]" },
      {
        "components": [
          { "internalType": "address", "name": "base", "type": "address" },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "notionalUsd",
                "type": "uint256"
              },
              { "internalType": "uint16", "name": "tier", "type": "uint16" },
              { "internalType": "uint16", "name": "maxLeverage", "type": "uint16" },
              { "internalType": "uint16", "name": "initialLostP", "type": "uint16" },
              { "internalType": "uint16", "name": "liqLostP", "type": "uint16" }
            ],
            "internalType": "struct LibPairsManager.LeverageMargin[]",
            "name": "leverageMargins",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IPairsManager.UpdateLeverageParam[]",
        "name": "updateLeverages",
        "type": "tuple[]"
      }
    ],
    "name": "safeMode",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      { "internalType": "uint16", "name": "feeConfigIndex", "type": "uint16" }
    ],
    "name": "updatePairFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "internalType": "uint256",
        "name": "fundingFeePerBlockP",
        "type": "uint256"
      },
      { "internalType": "uint256", "name": "minFundingFeeR", "type": "uint256" },
      { "internalType": "uint256", "name": "maxFundingFeeR", "type": "uint256" }
    ],
    "name": "updatePairFundingFeeConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      { "internalType": "uint40", "name": "longHoldingFeeRate", "type": "uint40" },
      { "internalType": "uint40", "name": "shortHoldingFeeRate", "type": "uint40" }
    ],
    "name": "updatePairHoldingFeeRate",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "components": [
          { "internalType": "uint256", "name": "notionalUsd", "type": "uint256" },
          { "internalType": "uint16", "name": "tier", "type": "uint16" },
          { "internalType": "uint16", "name": "maxLeverage", "type": "uint16" },
          { "internalType": "uint16", "name": "initialLostP", "type": "uint16" },
          { "internalType": "uint16", "name": "liqLostP", "type": "uint16" }
        ],
        "internalType": "struct LibPairsManager.LeverageMargin[]",
        "name": "leverageMargins",
        "type": "tuple[]"
      }
    ],
    "name": "updatePairLeverageMargin",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      { "internalType": "uint256", "name": "maxLongOiUsd", "type": "uint256" },
      { "internalType": "uint256", "name": "maxShortOiUsd", "type": "uint256" }
    ],
    "name": "updatePairMaxOi",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      { "internalType": "uint16", "name": "slippageConfigIndex", "type": "uint16" }
    ],
    "name": "updatePairSlippage",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "internalType": "enum IPairsManager.PairStatus",
        "name": "status",
        "type": "uint8"
      }
    ],
    "name": "updatePairStatus",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint24", "name": "id", "type": "uint24" },
      { "internalType": "uint16", "name": "commissionP", "type": "uint16" },
      { "internalType": "uint16", "name": "daoShareP", "type": "uint16" },
      { "internalType": "uint16", "name": "alpPoolP", "type": "uint16" },
      { "internalType": "address", "name": "receiver", "type": "address" },
      { "internalType": "string", "name": "name", "type": "string" },
      { "internalType": "string", "name": "url", "type": "string" }
    ],
    "name": "addBroker",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "start", "type": "uint256" },
      { "internalType": "uint8", "name": "length", "type": "uint8" }
    ],
    "name": "brokers",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "string", "name": "url", "type": "string" },
          { "internalType": "address", "name": "receiver", "type": "address" },
          { "internalType": "uint24", "name": "id", "type": "uint24" },
          { "internalType": "uint16", "name": "commissionP", "type": "uint16" },
          { "internalType": "uint16", "name": "daoShareP", "type": "uint16" },
          { "internalType": "uint16", "name": "alpPoolP", "type": "uint16" },
          {
            "components": [
              { "internalType": "address", "name": "token", "type": "address" },
              { "internalType": "uint256", "name": "total", "type": "uint256" },
              { "internalType": "uint256", "name": "pending", "type": "uint256" }
            ],
            "internalType": "struct CommissionInfo[]",
            "name": "commissions",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IBrokerManager.BrokerInfo[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint24", "name": "id", "type": "uint24" }],
    "name": "getBrokerById",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "string", "name": "url", "type": "string" },
          { "internalType": "address", "name": "receiver", "type": "address" },
          { "internalType": "uint24", "name": "id", "type": "uint24" },
          { "internalType": "uint16", "name": "commissionP", "type": "uint16" },
          { "internalType": "uint16", "name": "daoShareP", "type": "uint16" },
          { "internalType": "uint16", "name": "alpPoolP", "type": "uint16" },
          {
            "components": [
              { "internalType": "address", "name": "token", "type": "address" },
              { "internalType": "uint256", "name": "total", "type": "uint256" },
              { "internalType": "uint256", "name": "pending", "type": "uint256" }
            ],
            "internalType": "struct CommissionInfo[]",
            "name": "commissions",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IBrokerManager.BrokerInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint24", "name": "id", "type": "uint24" },
      { "internalType": "address", "name": "receiver", "type": "address" },
      { "internalType": "string", "name": "name", "type": "string" },
      { "internalType": "string", "name": "url", "type": "string" }
    ],
    "name": "initBrokerManagerFacet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint24", "name": "id", "type": "uint24" }],
    "name": "removeBroker",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint24", "name": "id", "type": "uint24" },
      { "internalType": "uint16", "name": "commissionP", "type": "uint16" },
      { "internalType": "uint16", "name": "daoShareP", "type": "uint16" },
      { "internalType": "uint16", "name": "alpPoolP", "type": "uint16" }
    ],
    "name": "updateBrokerCommissionP",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint24", "name": "id", "type": "uint24" },
      { "internalType": "string", "name": "name", "type": "string" }
    ],
    "name": "updateBrokerName",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint24", "name": "id", "type": "uint24" },
      { "internalType": "address", "name": "receiver", "type": "address" }
    ],
    "name": "updateBrokerReceiver",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint24", "name": "id", "type": "uint24" },
      { "internalType": "string", "name": "url", "type": "string" }
    ],
    "name": "updateBrokerUrl",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint24", "name": "id", "type": "uint24" }],
    "name": "withdrawCommission",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "orderHash",
        "type": "bytes32"
      }
    ],
    "name": "CancelLimitOrder",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "orderHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "enum ITradingChecker.Refund",
        "name": "refund",
        "type": "uint8"
      }
    ],
    "name": "ExecuteLimitOrderRejected",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "orderHash",
        "type": "bytes32"
      }
    ],
    "name": "ExecuteLimitOrderSuccessful",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "orderHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "enum ITradingChecker.Refund",
        "name": "refund",
        "type": "uint8"
      }
    ],
    "name": "LimitOrderRefund",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "orderHash",
        "type": "bytes32"
      },
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "indexed": false,
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "OpenLimitOrder",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "orderHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "oldSl",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "sl",
        "type": "uint256"
      }
    ],
    "name": "UpdateOrderSl",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "orderHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "oldTp",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tp",
        "type": "uint256"
      }
    ],
    "name": "UpdateOrderTp",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }
    ],
    "name": "cancelLimitOrder",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "hash", "type": "bytes32" },
          { "internalType": "uint64", "name": "price", "type": "uint64" }
        ],
        "internalType": "struct IBook.KeeperExecution[]",
        "name": "executeOrders",
        "type": "tuple[]"
      }
    ],
    "name": "executeLimitOrder",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }
    ],
    "name": "getLimitOrderByHash",
    "outputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
          { "internalType": "string", "name": "pair", "type": "string" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "limitPrice", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
        ],
        "internalType": "struct ILimitOrder.LimitOrderView",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "user", "type": "address" },
      { "internalType": "address", "name": "pairBase", "type": "address" }
    ],
    "name": "getLimitOrders",
    "outputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
          { "internalType": "string", "name": "pair", "type": "string" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "limitPrice", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
        ],
        "internalType": "struct ILimitOrder.LimitOrderView[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "openLimitOrder",
    "outputs": [
      { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "openLimitOrderBNB",
    "outputs": [
      { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
      { "internalType": "uint64", "name": "stopLoss", "type": "uint64" }
    ],
    "name": "updateOrderSl",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
      { "internalType": "uint64", "name": "takeProfit", "type": "uint64" }
    ],
    "name": "updateOrderTp",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
      { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
      { "internalType": "uint64", "name": "stopLoss", "type": "uint64" }
    ],
    "name": "updateOrderTpAndSl",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "user", "type": "address" },
          {
            "internalType": "uint32",
            "name": "userOpenTradeIndex",
            "type": "uint32"
          },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "margin", "type": "uint96" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          {
            "internalType": "int256",
            "name": "longAccFundingFeePerShare",
            "type": "int256"
          },
          { "internalType": "uint96", "name": "executionFee", "type": "uint96" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint40", "name": "holdingFeeRate", "type": "uint40" },
          { "internalType": "uint256", "name": "openBlock", "type": "uint256" }
        ],
        "internalType": "struct ITrading.OpenTrade",
        "name": "ot",
        "type": "tuple"
      }
    ],
    "name": "availableTakeProfit",
    "outputs": [
      { "internalType": "uint64", "name": "takeProfit", "type": "uint64" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bool", "name": "isLong", "type": "bool" },
      { "internalType": "uint256", "name": "stopLoss", "type": "uint256" },
      { "internalType": "uint256", "name": "entryPrice", "type": "uint256" }
    ],
    "name": "checkSl",
    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "user", "type": "address" },
          {
            "internalType": "uint32",
            "name": "userOpenOrderIndex",
            "type": "uint32"
          },
          { "internalType": "uint64", "name": "limitPrice", "type": "uint64" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" }
        ],
        "internalType": "struct LimitOrder",
        "name": "order",
        "type": "tuple"
      },
      { "internalType": "uint256", "name": "marketPrice", "type": "uint256" }
    ],
    "name": "executeLimitOrderCheck",
    "outputs": [
      { "internalType": "bool", "name": "successful", "type": "bool" },
      {
        "internalType": "enum ITradingChecker.Refund",
        "name": "refund",
        "type": "uint8"
      },
      { "internalType": "bytes", "name": "data", "type": "bytes" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "user", "type": "address" },
          {
            "internalType": "uint32",
            "name": "userOpenTradeIndex",
            "type": "uint32"
          },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "margin", "type": "uint96" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          {
            "internalType": "int256",
            "name": "longAccFundingFeePerShare",
            "type": "int256"
          },
          { "internalType": "uint96", "name": "executionFee", "type": "uint96" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint40", "name": "holdingFeeRate", "type": "uint40" },
          { "internalType": "uint256", "name": "openBlock", "type": "uint256" }
        ],
        "internalType": "struct ITrading.OpenTrade",
        "name": "ot",
        "type": "tuple"
      },
      { "internalType": "uint256", "name": "marketPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "closePrice", "type": "uint256" }
    ],
    "name": "executeLiquidateCheck",
    "outputs": [
      { "internalType": "bool", "name": "needLiq", "type": "bool" },
      { "internalType": "int256", "name": "pnl", "type": "int256" },
      { "internalType": "int256", "name": "fundingFee", "type": "int256" },
      { "internalType": "uint256", "name": "closeFee", "type": "uint256" },
      { "internalType": "uint256", "name": "holdingFee", "type": "uint256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "user", "type": "address" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint128", "name": "blockNumber", "type": "uint128" }
        ],
        "internalType": "struct ITrading.PendingTrade",
        "name": "pt",
        "type": "tuple"
      },
      { "internalType": "uint256", "name": "marketPrice", "type": "uint256" }
    ],
    "name": "marketTradeCallbackCheck",
    "outputs": [
      { "internalType": "bool", "name": "successful", "type": "bool" },
      {
        "internalType": "enum ITradingChecker.Refund",
        "name": "refund",
        "type": "uint8"
      },
      { "internalType": "bytes", "name": "data", "type": "bytes" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "openLimitOrderCheck",
    "outputs": [],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "openMarketTradeCheck",
    "outputs": [],
    "stateMutability": "view",
    "type": "function"
  },
  { "inputs": [], "name": "ZeroAddress", "type": "error" },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      }
    ],
    "name": "SetExecutionFeeReceiver",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "oldExecutionFeeUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "executionFeeUsd",
        "type": "uint256"
      }
    ],
    "name": "SetExecutionFeeUsd",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "oldMaxTakeProfitP",
        "type": "uint24"
      },
      {
        "indexed": false,
        "internalType": "uint24",
        "name": "maxTakeProfitP",
        "type": "uint24"
      }
    ],
    "name": "SetMaxTakeProfitP",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "pairBase",
        "type": "address"
      },
      {
        "components": [
          { "internalType": "uint16", "name": "leverage", "type": "uint16" },
          { "internalType": "uint24", "name": "maxTakeProfitP", "type": "uint24" }
        ],
        "indexed": false,
        "internalType": "struct MaxTpRatioForLeverage[]",
        "name": "maxTpRatios",
        "type": "tuple[]"
      }
    ],
    "name": "SetMaxTpRatioForLeverage",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "oldMinNotionalUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "minNotionalUsd",
        "type": "uint256"
      }
    ],
    "name": "SetMinNotionalUsd",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint16",
        "name": "oldTradeSwitches",
        "type": "uint16"
      },
      {
        "indexed": true,
        "internalType": "uint16",
        "name": "tradeSwitches",
        "type": "uint16"
      }
    ],
    "name": "SetTradeSwitches",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "executionFeeReceiver",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "pairBase", "type": "address" },
      { "internalType": "uint256", "name": "leverage_10000", "type": "uint256" }
    ],
    "name": "getPairMaxTpRatio",
    "outputs": [{ "internalType": "uint24", "name": "", "type": "uint24" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "pairBase", "type": "address" }],
    "name": "getPairMaxTpRatios",
    "outputs": [
      {
        "components": [
          { "internalType": "uint16", "name": "leverage", "type": "uint16" },
          { "internalType": "uint24", "name": "maxTakeProfitP", "type": "uint24" }
        ],
        "internalType": "struct MaxTpRatioForLeverage[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPredictionConfig",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "minBetUsd", "type": "uint256" },
          { "internalType": "bool", "name": "predictionBet", "type": "bool" },
          { "internalType": "bool", "name": "predictionSettle", "type": "bool" }
        ],
        "internalType": "struct ITradingConfig.PredictionConfig",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getTradingConfig",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "executionFeeUsd",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "minNotionalUsd", "type": "uint256" },
          { "internalType": "uint24", "name": "maxTakeProfitP", "type": "uint24" },
          { "internalType": "bool", "name": "limitOrder", "type": "bool" },
          { "internalType": "bool", "name": "executeLimitOrder", "type": "bool" },
          { "internalType": "bool", "name": "marketTrading", "type": "bool" },
          { "internalType": "bool", "name": "userCloseTrading", "type": "bool" },
          { "internalType": "bool", "name": "tpSlCloseTrading", "type": "bool" },
          { "internalType": "bool", "name": "liquidateTrading", "type": "bool" }
        ],
        "internalType": "struct ITradingConfig.TradingConfig",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "executionFeeUsd", "type": "uint256" },
      { "internalType": "uint256", "name": "minNotionalUsd", "type": "uint256" },
      { "internalType": "uint24", "name": "maxTakeProfitP", "type": "uint24" },
      { "internalType": "uint256", "name": "minBetUsd", "type": "uint256" }
    ],
    "name": "initTradingConfigFacet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }],
    "name": "setExecutionFeeReceiver",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "executionFeeUsd", "type": "uint256" }
    ],
    "name": "setExecutionFeeUsd",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint24", "name": "maxTakeProfitP", "type": "uint24" }
    ],
    "name": "setMaxTakeProfitP",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "pairBase", "type": "address" },
      {
        "components": [
          { "internalType": "uint16", "name": "leverage", "type": "uint16" },
          { "internalType": "uint24", "name": "maxTakeProfitP", "type": "uint24" }
        ],
        "internalType": "struct MaxTpRatioForLeverage[]",
        "name": "maxTpRatios",
        "type": "tuple[]"
      }
    ],
    "name": "setMaxTpRatioForLeverage",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "minBetUsd", "type": "uint256" }
    ],
    "name": "setMinBetUsd",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "minNotionalUsd", "type": "uint256" }
    ],
    "name": "setMinNotionalUsd",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bool", "name": "limitOrder", "type": "bool" },
      { "internalType": "bool", "name": "executeLimitOrder", "type": "bool" },
      { "internalType": "bool", "name": "marketTrade", "type": "bool" },
      { "internalType": "bool", "name": "userCloseTrade", "type": "bool" },
      { "internalType": "bool", "name": "tpSlCloseTrade", "type": "bool" },
      { "internalType": "bool", "name": "liquidateTradeSwitch", "type": "bool" },
      { "internalType": "bool", "name": "predictBet", "type": "bool" },
      { "internalType": "bool", "name": "predictSettle", "type": "bool" }
    ],
    "name": "setTradingSwitches",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
    "name": "UnsupportedMarginToken",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "funder",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "AddMarginPoolBalance",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "pairBase",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "lastBlock",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "int256",
        "name": "longAccFundingFeePerShare",
        "type": "int256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "marketPrice",
        "type": "uint256"
      }
    ],
    "name": "UpdatePairAccFundingFeePerShare",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "pairBase",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "lastBlock",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "longQty",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "shortQty",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "int256",
        "name": "longAccFundingFeePerShare",
        "type": "int256"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "lpLongAvgPrice",
        "type": "uint64"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "lpShortAvgPrice",
        "type": "uint64"
      }
    ],
    "name": "UpdatePairPositionInfo",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "token", "type": "address" },
      { "internalType": "uint256", "name": "amount", "type": "uint256" }
    ],
    "name": "addMarginPoolBalance",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "pairBase", "type": "address" }],
    "name": "getPairQty",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "longQty", "type": "uint256" },
          { "internalType": "uint256", "name": "shortQty", "type": "uint256" }
        ],
        "internalType": "struct ITradingCore.PairQty",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "pairBase", "type": "address" }],
    "name": "lastLongAccFundingFeePerShare",
    "outputs": [
      {
        "internalType": "int256",
        "name": "longAccFundingFeePerShare",
        "type": "int256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "lpNotionalUsd",
    "outputs": [
      { "internalType": "uint256", "name": "notionalUsd", "type": "uint256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "targetToken", "type": "address" }
    ],
    "name": "lpUnrealizedPnlUsd",
    "outputs": [
      { "internalType": "int256", "name": "totalUsd", "type": "int256" },
      { "internalType": "int256", "name": "tokenUsd", "type": "int256" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "lpUnrealizedPnlUsd",
    "outputs": [
      { "internalType": "int256", "name": "totalUsd", "type": "int256" },
      {
        "components": [
          { "internalType": "address", "name": "token", "type": "address" },
          { "internalType": "int256", "name": "unPnlUsd", "type": "int256" }
        ],
        "internalType": "struct ITradingCore.LpMarginTokenUnPnl[]",
        "name": "tokenUnPnlUsd",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "pairBase", "type": "address" },
      { "internalType": "uint256", "name": "marketPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "qty", "type": "uint256" },
      { "internalType": "bool", "name": "isLong", "type": "bool" }
    ],
    "name": "slippagePrice",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "longQty", "type": "uint256" },
          { "internalType": "uint256", "name": "shortQty", "type": "uint256" }
        ],
        "internalType": "struct ITradingCore.PairQty",
        "name": "pairQty",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "onePercentDepthAboveUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthBelowUsd",
            "type": "uint256"
          },
          { "internalType": "uint16", "name": "slippageLongP", "type": "uint16" },
          { "internalType": "uint16", "name": "slippageShortP", "type": "uint16" },
          {
            "internalType": "uint256",
            "name": "longThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "enum SlippageType",
            "name": "slippageType",
            "type": "uint8"
          }
        ],
        "internalType": "struct SlippageConfigView",
        "name": "sc",
        "type": "tuple"
      },
      { "internalType": "uint256", "name": "marketPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "qty", "type": "uint256" },
      { "internalType": "bool", "name": "isLong", "type": "bool" }
    ],
    "name": "slippagePrice",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "pairBase", "type": "address" },
      { "internalType": "uint256", "name": "limitPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "qty", "type": "uint256" },
      { "internalType": "bool", "name": "isLong", "type": "bool" }
    ],
    "name": "triggerPrice",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "longQty", "type": "uint256" },
          { "internalType": "uint256", "name": "shortQty", "type": "uint256" }
        ],
        "internalType": "struct ITradingCore.PairQty",
        "name": "pairQty",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "onePercentDepthAboveUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthBelowUsd",
            "type": "uint256"
          },
          { "internalType": "uint16", "name": "slippageLongP", "type": "uint16" },
          { "internalType": "uint16", "name": "slippageShortP", "type": "uint16" },
          {
            "internalType": "uint256",
            "name": "longThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "enum SlippageType",
            "name": "slippageType",
            "type": "uint8"
          }
        ],
        "internalType": "struct SlippageConfigView",
        "name": "sc",
        "type": "tuple"
      },
      { "internalType": "uint256", "name": "limitPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "qty", "type": "uint256" },
      { "internalType": "bool", "name": "isLong", "type": "bool" }
    ],
    "name": "triggerPrice",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "pairBase", "type": "address" }],
    "name": "updatePairPositionInfo",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "pairBase", "type": "address" },
      { "internalType": "uint256", "name": "userPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "marketPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "qty", "type": "uint256" },
      { "internalType": "bool", "name": "isLong", "type": "bool" },
      { "internalType": "bool", "name": "isOpen", "type": "bool" }
    ],
    "name": "updatePairPositionInfo",
    "outputs": [
      {
        "internalType": "int256",
        "name": "longAccFundingFeePerShare",
        "type": "int256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      {
        "internalType": "uint256",
        "name": "minRequiredLeverage",
        "type": "uint256"
      },
      { "internalType": "uint256", "name": "newLeverage", "type": "uint256" }
    ],
    "name": "BelowDegenModeMinLeverage",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "uint256", "name": "amount", "type": "uint256" }
    ],
    "name": "InsufficientMarginAmount",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
      { "internalType": "uint64", "name": "newStopLoss", "type": "uint64" }
    ],
    "name": "InvalidStopLoss",
    "type": "error"
  },
  { "inputs": [], "name": "MarketClosed", "type": "error" },
  { "inputs": [], "name": "NonexistentTrade", "type": "error" },
  {
    "inputs": [{ "internalType": "address", "name": "pairBase", "type": "address" }],
    "name": "PairClosed",
    "type": "error"
  },
  {
    "inputs": [{ "internalType": "address", "name": "operator", "type": "address" }],
    "name": "UnauthorizedOperation",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "FundingFeeAddLiquidity",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "indexed": false,
        "internalType": "struct IBook.OpenDataInput",
        "name": "trade",
        "type": "tuple"
      }
    ],
    "name": "MarketPendingTrade",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "beforeMargin",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "margin",
        "type": "uint256"
      }
    ],
    "name": "UpdateMargin",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "oldSl",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "sl",
        "type": "uint256"
      }
    ],
    "name": "UpdateTradeSl",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "oldTp",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tp",
        "type": "uint256"
      }
    ],
    "name": "UpdateTradeTp",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "uint96", "name": "amount", "type": "uint96" }
    ],
    "name": "addMargin",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32[]", "name": "tradeHashes", "type": "bytes32[]" }
    ],
    "name": "batchCloseTrade",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" }
    ],
    "name": "closeTrade",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "openMarketTrade",
    "outputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "internalType": "struct IBook.OpenDataInput",
        "name": "data",
        "type": "tuple"
      }
    ],
    "name": "openMarketTradeBNB",
    "outputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "lpReceiveFundingFeeUsd",
        "type": "uint256"
      }
    ],
    "name": "settleLpFundingFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "uint64", "name": "stopLoss", "type": "uint64" }
    ],
    "name": "updateTradeSl",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "uint64", "name": "takeProfit", "type": "uint64" }
    ],
    "name": "updateTradeTp",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
      { "internalType": "uint64", "name": "stopLoss", "type": "uint64" }
    ],
    "name": "updateTradeTpAndSl",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "pairBase", "type": "address" }],
    "name": "getMarketInfo",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "uint256", "name": "longQty", "type": "uint256" },
          { "internalType": "uint256", "name": "shortQty", "type": "uint256" },
          { "internalType": "uint64", "name": "lpLongAvgPrice", "type": "uint64" },
          { "internalType": "uint64", "name": "lpShortAvgPrice", "type": "uint64" },
          { "internalType": "int256", "name": "fundingFeeRate", "type": "int256" }
        ],
        "internalType": "struct ITradingReader.MarketInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address[]", "name": "pairBases", "type": "address[]" }
    ],
    "name": "getMarketInfos",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "uint256", "name": "longQty", "type": "uint256" },
          { "internalType": "uint256", "name": "shortQty", "type": "uint256" },
          { "internalType": "uint64", "name": "lpLongAvgPrice", "type": "uint64" },
          { "internalType": "uint64", "name": "lpShortAvgPrice", "type": "uint64" },
          { "internalType": "int256", "name": "fundingFeeRate", "type": "int256" }
        ],
        "internalType": "struct ITradingReader.MarketInfo[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" }
    ],
    "name": "getPendingTrade",
    "outputs": [
      {
        "components": [
          { "internalType": "address", "name": "user", "type": "address" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint128", "name": "blockNumber", "type": "uint128" }
        ],
        "internalType": "struct ITrading.PendingTrade",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" }
    ],
    "name": "getPositionByHashV2",
    "outputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "positionHash", "type": "bytes32" },
          { "internalType": "string", "name": "pair", "type": "string" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "address", "name": "marginToken", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint96", "name": "margin", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          { "internalType": "uint96", "name": "executionFee", "type": "uint96" },
          { "internalType": "int256", "name": "fundingFee", "type": "int256" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" },
          { "internalType": "uint96", "name": "holdingFee", "type": "uint96" }
        ],
        "internalType": "struct ITradingReader.Position",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "user", "type": "address" },
      { "internalType": "address", "name": "pairBase", "type": "address" }
    ],
    "name": "getPositionsV2",
    "outputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "positionHash", "type": "bytes32" },
          { "internalType": "string", "name": "pair", "type": "string" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "address", "name": "marginToken", "type": "address" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint96", "name": "margin", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          { "internalType": "uint96", "name": "executionFee", "type": "uint96" },
          { "internalType": "int256", "name": "fundingFee", "type": "int256" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" },
          { "internalType": "uint96", "name": "holdingFee", "type": "uint96" }
        ],
        "internalType": "struct ITradingReader.Position[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address[]", "name": "tokens", "type": "address[]" }
    ],
    "name": "traderAssets",
    "outputs": [
      {
        "components": [
          {
            "internalType": "enum ITradingReader.AssetPurpose",
            "name": "purpose",
            "type": "uint8"
          },
          { "internalType": "address", "name": "token", "type": "address" },
          { "internalType": "uint256", "name": "value", "type": "uint256" }
        ],
        "internalType": "struct ITradingReader.TraderAsset[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "components": [
          { "internalType": "address", "name": "user", "type": "address" },
          {
            "internalType": "uint32",
            "name": "userOpenTradeIndex",
            "type": "uint32"
          },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "margin", "type": "uint96" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          {
            "internalType": "int256",
            "name": "longAccFundingFeePerShare",
            "type": "int256"
          },
          { "internalType": "uint96", "name": "executionFee", "type": "uint96" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint40", "name": "holdingFeeRate", "type": "uint40" },
          { "internalType": "uint256", "name": "openBlock", "type": "uint256" }
        ],
        "indexed": false,
        "internalType": "struct ITrading.OpenTrade",
        "name": "ot",
        "type": "tuple"
      }
    ],
    "name": "OpenMarketTrade",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "enum ITradingChecker.Refund",
        "name": "refund",
        "type": "uint8"
      }
    ],
    "name": "PendingTradeRefund",
    "type": "event"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "orderHash", "type": "bytes32" },
          { "internalType": "address", "name": "user", "type": "address" },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "margin", "type": "uint96" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          { "internalType": "uint96", "name": "executionFee", "type": "uint96" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" }
        ],
        "internalType": "struct LimitOrderDeal",
        "name": "order",
        "type": "tuple"
      },
      { "internalType": "uint256", "name": "marketPrice", "type": "uint256" }
    ],
    "name": "limitOrderDeal",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "uint256", "name": "upperPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "lowerPrice", "type": "uint256" }
    ],
    "name": "marketTradeCallback",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "CloseTradeAddLiquidity",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "CloseTradeReceived",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "components": [
          { "internalType": "uint64", "name": "closePrice", "type": "uint64" },
          { "internalType": "int96", "name": "fundingFee", "type": "int96" },
          { "internalType": "uint96", "name": "closeFee", "type": "uint96" },
          { "internalType": "int96", "name": "pnl", "type": "int96" },
          { "internalType": "uint96", "name": "holdingFee", "type": "uint96" }
        ],
        "indexed": false,
        "internalType": "struct CloseInfo",
        "name": "closeInfo",
        "type": "tuple"
      }
    ],
    "name": "CloseTradeSuccessful",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "enum ITradingClose.ExecutionType",
        "name": "executionType",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "execPrice",
        "type": "uint64"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "marketPrice",
        "type": "uint64"
      }
    ],
    "name": "ExecuteCloseRejected",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "tradeHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "enum ITradingClose.ExecutionType",
        "name": "executionType",
        "type": "uint8"
      },
      {
        "components": [
          { "internalType": "uint64", "name": "closePrice", "type": "uint64" },
          { "internalType": "int96", "name": "fundingFee", "type": "int96" },
          { "internalType": "uint96", "name": "closeFee", "type": "uint96" },
          { "internalType": "int96", "name": "pnl", "type": "int96" },
          { "internalType": "uint96", "name": "holdingFee", "type": "uint96" }
        ],
        "indexed": false,
        "internalType": "struct CloseInfo",
        "name": "closeInfo",
        "type": "tuple"
      }
    ],
    "name": "ExecuteCloseSuccessful",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "uint256", "name": "upperPrice", "type": "uint256" },
      { "internalType": "uint256", "name": "lowerPrice", "type": "uint256" }
    ],
    "name": "closeTradeCallback",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          {
            "internalType": "enum ITradingClose.ExecutionType",
            "name": "executionType",
            "type": "uint8"
          }
        ],
        "internalType": "struct ITradingClose.TpSlOrLiq[]",
        "name": "arr",
        "type": "tuple[]"
      }
    ],
    "name": "executeTpSlOrLiq",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  { "inputs": [], "name": "ZeroAddress", "type": "error" },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "base",
        "type": "address"
      },
      {
        "components": [
          { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          {
            "internalType": "enum PredictionPairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
        ],
        "indexed": false,
        "internalType": "struct PredictionPeriod[]",
        "name": "predictionPeriods",
        "type": "tuple[]"
      }
    ],
    "name": "AddPeriodForPredictionPair",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "base",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "name",
        "type": "string"
      },
      {
        "components": [
          { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          {
            "internalType": "enum PredictionPairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
        ],
        "indexed": false,
        "internalType": "struct PredictionPeriod[]",
        "name": "predictionPeriods",
        "type": "tuple[]"
      }
    ],
    "name": "AddPredictionPair",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "base",
        "type": "address"
      }
    ],
    "name": "RemovePredictionPair",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "base",
        "type": "address"
      },
      {
        "components": [
          { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          {
            "internalType": "enum PredictionPairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
        ],
        "indexed": false,
        "internalType": "struct PredictionPeriod[]",
        "name": "predictionPeriods",
        "type": "tuple[]"
      }
    ],
    "name": "ReplacePredictionPairPeriod",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "base",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "enum Period",
        "name": "period",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "openFeeP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "winCloseFeeP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "loseCloseFeeP",
        "type": "uint16"
      }
    ],
    "name": "UpdatePredictionPairPeriodFee",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "base",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "enum Period",
        "name": "period",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "maxUpUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "maxDownUsd",
        "type": "uint256"
      }
    ],
    "name": "UpdatePredictionPairPeriodMaxCap",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "base",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "enum Period",
        "name": "period",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "winRatio",
        "type": "uint16"
      }
    ],
    "name": "UpdatePredictionPairPeriodWinRatio",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "base",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "enum PredictionPairStatus",
        "name": "status",
        "type": "uint8"
      }
    ],
    "name": "UpdatePredictionPairStatus",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "components": [
          { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          {
            "internalType": "enum PredictionPairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
        ],
        "internalType": "struct PredictionPeriod[]",
        "name": "predictionPeriods",
        "type": "tuple[]"
      }
    ],
    "name": "addPeriodForPredictionPair",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      { "internalType": "string", "name": "name", "type": "string" },
      {
        "components": [
          { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          {
            "internalType": "enum PredictionPairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
        ],
        "internalType": "struct PredictionPeriod[]",
        "name": "predictionPeriods",
        "type": "tuple[]"
      }
    ],
    "name": "addPredictionPair",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "getPredictionPairByBase",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "address", "name": "base", "type": "address" },
          {
            "components": [
              { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
              { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
              { "internalType": "enum Period", "name": "period", "type": "uint8" },
              {
                "internalType": "enum PredictionPairStatus",
                "name": "status",
                "type": "uint8"
              },
              { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
              { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
            ],
            "internalType": "struct PredictionPeriod[]",
            "name": "predictionPeriods",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IPredictionManager.PredictionPairView",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      { "internalType": "enum Period", "name": "period", "type": "uint8" }
    ],
    "name": "getPredictionPeriod",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          {
            "internalType": "enum PredictionPairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
        ],
        "internalType": "struct PredictionPeriod",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "start", "type": "uint256" },
      { "internalType": "uint8", "name": "size", "type": "uint8" }
    ],
    "name": "predictionPairs",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "address", "name": "base", "type": "address" },
          {
            "components": [
              { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
              { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
              { "internalType": "enum Period", "name": "period", "type": "uint8" },
              {
                "internalType": "enum PredictionPairStatus",
                "name": "status",
                "type": "uint8"
              },
              { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
              { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
            ],
            "internalType": "struct PredictionPeriod[]",
            "name": "predictionPeriods",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct IPredictionManager.PredictionPairView[]",
        "name": "predictPairViews",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "removePredictionPair",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "components": [
          { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          {
            "internalType": "enum PredictionPairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint16", "name": "winRatio", "type": "uint16" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
        ],
        "internalType": "struct PredictionPeriod[]",
        "name": "predictionPeriods",
        "type": "tuple[]"
      }
    ],
    "name": "replacePredictionPairPeriod",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "components": [
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "winCloseFeeP", "type": "uint16" },
          { "internalType": "uint16", "name": "loseCloseFeeP", "type": "uint16" }
        ],
        "internalType": "struct IPredictionManager.PeriodFee[]",
        "name": "periodFees",
        "type": "tuple[]"
      }
    ],
    "name": "updatePredictionPairFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "components": [
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          { "internalType": "uint256", "name": "maxUpUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxDownUsd", "type": "uint256" }
        ],
        "internalType": "struct IPredictionManager.PeriodCap[]",
        "name": "periodCaps",
        "type": "tuple[]"
      }
    ],
    "name": "updatePredictionPairMaxCap",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "internalType": "enum PredictionPairStatus",
        "name": "status",
        "type": "uint8"
      }
    ],
    "name": "updatePredictionPairStatus",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "base", "type": "address" },
      {
        "components": [
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          { "internalType": "uint16", "name": "winRatio", "type": "uint16" }
        ],
        "internalType": "struct IPredictionManager.PeriodWinRatio[]",
        "name": "periodWinRatios",
        "type": "tuple[]"
      }
    ],
    "name": "updatePredictionPairWinRatio",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "index", "type": "uint16" },
      { "internalType": "string", "name": "name", "type": "string" }
    ],
    "name": "ExistentSlippage",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "onePercentDepthAboveUsd",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "onePercentDepthBelowUsd",
        "type": "uint256"
      }
    ],
    "name": "InvalidOnePercentDepthUsd",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "slippageLongP", "type": "uint16" },
      { "internalType": "uint16", "name": "slippageShortP", "type": "uint16" }
    ],
    "name": "InvalidSlippage",
    "type": "error"
  },
  {
    "inputs": [{ "internalType": "uint16", "name": "index", "type": "uint16" }],
    "name": "NonexistentSlippage",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "uint16", "name": "index", "type": "uint16" },
      { "internalType": "string", "name": "name", "type": "string" }
    ],
    "name": "SlippageInUse",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint16",
        "name": "index",
        "type": "uint16"
      },
      {
        "indexed": true,
        "internalType": "enum SlippageType",
        "name": "slippageType",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "onePercentDepthAboveUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "onePercentDepthBelowUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "slippageLongP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "slippageShortP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "longThresholdUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "shortThresholdUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "name",
        "type": "string"
      }
    ],
    "name": "AddSlippageConfig",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint16",
        "name": "index",
        "type": "uint16"
      }
    ],
    "name": "RemoveSlippageConfig",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint16",
        "name": "index",
        "type": "uint16"
      },
      {
        "indexed": true,
        "internalType": "enum SlippageType",
        "name": "slippageType",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "onePercentDepthAboveUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "onePercentDepthBelowUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "slippageLongP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint16",
        "name": "slippageShortP",
        "type": "uint16"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "longThresholdUsd",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "shortThresholdUsd",
        "type": "uint256"
      }
    ],
    "name": "UpdateSlippageConfig",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "string", "name": "name", "type": "string" },
      { "internalType": "uint16", "name": "index", "type": "uint16" },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "onePercentDepthAboveUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthBelowUsd",
            "type": "uint256"
          },
          { "internalType": "uint16", "name": "slippageLongP", "type": "uint16" },
          { "internalType": "uint16", "name": "slippageShortP", "type": "uint16" },
          {
            "internalType": "uint256",
            "name": "longThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "enum SlippageType",
            "name": "slippageType",
            "type": "uint8"
          }
        ],
        "internalType": "struct SlippageConfigView",
        "name": "sc",
        "type": "tuple"
      }
    ],
    "name": "addSlippageConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "uint16", "name": "index", "type": "uint16" },
          {
            "internalType": "enum SlippageType",
            "name": "slippageType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthAboveUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthBelowUsd",
            "type": "uint256"
          },
          { "internalType": "uint16", "name": "slippageLongP", "type": "uint16" },
          { "internalType": "uint16", "name": "slippageShortP", "type": "uint16" },
          {
            "internalType": "uint256",
            "name": "longThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortThresholdUsd",
            "type": "uint256"
          }
        ],
        "internalType": "struct ISlippageManager.UpdateSlippageConfigParam[]",
        "name": "params",
        "type": "tuple[]"
      }
    ],
    "name": "batchUpdateSlippageConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint16", "name": "index", "type": "uint16" }],
    "name": "getSlippageConfigByIndex",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          {
            "internalType": "uint256",
            "name": "onePercentDepthAboveUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthBelowUsd",
            "type": "uint256"
          },
          { "internalType": "uint16", "name": "slippageLongP", "type": "uint16" },
          { "internalType": "uint16", "name": "slippageShortP", "type": "uint16" },
          { "internalType": "uint16", "name": "index", "type": "uint16" },
          {
            "internalType": "enum SlippageType",
            "name": "slippageType",
            "type": "uint8"
          },
          { "internalType": "bool", "name": "enable", "type": "bool" },
          {
            "internalType": "uint256",
            "name": "longThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortThresholdUsd",
            "type": "uint256"
          }
        ],
        "internalType": "struct LibPairsManager.SlippageConfig",
        "name": "",
        "type": "tuple"
      },
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "address", "name": "base", "type": "address" },
          {
            "internalType": "enum IPairsManager.PairType",
            "name": "pairType",
            "type": "uint8"
          },
          {
            "internalType": "enum IPairsManager.PairStatus",
            "name": "status",
            "type": "uint8"
          }
        ],
        "internalType": "struct IPairsManager.PairSimple[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint16", "name": "index", "type": "uint16" }],
    "name": "removeSlippageConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "uint16", "name": "index", "type": "uint16" },
          {
            "internalType": "enum SlippageType",
            "name": "slippageType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthAboveUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "onePercentDepthBelowUsd",
            "type": "uint256"
          },
          { "internalType": "uint16", "name": "slippageLongP", "type": "uint16" },
          { "internalType": "uint16", "name": "slippageShortP", "type": "uint16" },
          {
            "internalType": "uint256",
            "name": "longThresholdUsd",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "shortThresholdUsd",
            "type": "uint256"
          }
        ],
        "internalType": "struct ISlippageManager.UpdateSlippageConfigParam",
        "name": "param",
        "type": "tuple"
      }
    ],
    "name": "updateSlippageConfig",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "transactionHash",
        "type": "bytes32"
      }
    ],
    "name": "CancelTransaction",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "transactionHash",
        "type": "bytes32"
      }
    ],
    "name": "ExecuteTransaction",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "transactionHash",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "functionSignature",
        "type": "string"
      },
      { "indexed": false, "internalType": "bytes", "name": "data", "type": "bytes" }
    ],
    "name": "QueueTransaction",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" }
    ],
    "name": "cancelTransaction",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "transactionHash", "type": "bytes32" }
    ],
    "name": "executeTransaction",
    "outputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "string", "name": "functionSignature", "type": "string" },
      { "internalType": "bytes", "name": "data", "type": "bytes" }
    ],
    "name": "queueTransaction",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "enum IPredictUpDown.PredictionRefund",
        "name": "refund",
        "type": "uint8"
      }
    ],
    "name": "PendingPredictionRefund",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "components": [
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "betAmount", "type": "uint96" },
          {
            "internalType": "address",
            "name": "predictionPairBase",
            "type": "address"
          },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          { "internalType": "address", "name": "user", "type": "address" },
          { "internalType": "uint96", "name": "betAmountUsd", "type": "uint96" },
          {
            "internalType": "uint32",
            "name": "userOpenPredictIndex",
            "type": "uint32"
          },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "uint40", "name": "startTime", "type": "uint40" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isUp", "type": "bool" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" }
        ],
        "indexed": false,
        "internalType": "struct OpenPrediction",
        "name": "op",
        "type": "tuple"
      }
    ],
    "name": "PredictAndBet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "components": [
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          {
            "internalType": "address",
            "name": "predictionPairBase",
            "type": "address"
          },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          { "internalType": "address", "name": "user", "type": "address" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isUp", "type": "bool" },
          { "internalType": "uint128", "name": "blockNumber", "type": "uint128" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" }
        ],
        "indexed": false,
        "internalType": "struct PendingPrediction",
        "name": "pp",
        "type": "tuple"
      }
    ],
    "name": "PredictAndBetPending",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "enum Period",
        "name": "period",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "correctTime",
        "type": "uint256"
      }
    ],
    "name": "SettlePredictionReject",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      { "indexed": false, "internalType": "bool", "name": "win", "type": "bool" },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "endPrice",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "profitOrLoss",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "closeFee",
        "type": "uint256"
      }
    ],
    "name": "SettlePredictionSuccessful",
    "type": "event"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "id", "type": "uint256" }],
    "name": "getPredictionById",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "id", "type": "uint256" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "betAmount", "type": "uint96" },
          {
            "internalType": "address",
            "name": "predictionPairBase",
            "type": "address"
          },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "uint40", "name": "startTime", "type": "uint40" },
          { "internalType": "bool", "name": "isUp", "type": "bool" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" }
        ],
        "internalType": "struct IPredictUpDown.PredictionView",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "predictionPairBase", "type": "address" },
      { "internalType": "enum Period[]", "name": "periods", "type": "uint8[]" }
    ],
    "name": "getPredictionMarket",
    "outputs": [
      {
        "components": [
          { "internalType": "uint96", "name": "upUsd", "type": "uint96" },
          { "internalType": "uint96", "name": "downUsd", "type": "uint96" }
        ],
        "internalType": "struct PredictionMarket[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "user", "type": "address" },
      { "internalType": "address", "name": "predictionPairBase", "type": "address" }
    ],
    "name": "getPredictions",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "id", "type": "uint256" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "betAmount", "type": "uint96" },
          {
            "internalType": "address",
            "name": "predictionPairBase",
            "type": "address"
          },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "uint40", "name": "startTime", "type": "uint40" },
          { "internalType": "bool", "name": "isUp", "type": "bool" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" }
        ],
        "internalType": "struct IPredictUpDown.PredictionView[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "predictionPairBase",
            "type": "address"
          },
          { "internalType": "bool", "name": "isUp", "type": "bool" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "internalType": "struct IPredictUpDown.PredictionInput",
        "name": "pi",
        "type": "tuple"
      }
    ],
    "name": "predictAndBet",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "predictionPairBase",
            "type": "address"
          },
          { "internalType": "bool", "name": "isUp", "type": "bool" },
          { "internalType": "enum Period", "name": "period", "type": "uint8" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "amountIn", "type": "uint96" },
          { "internalType": "uint64", "name": "price", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" }
        ],
        "internalType": "struct IPredictUpDown.PredictionInput",
        "name": "pi",
        "type": "tuple"
      }
    ],
    "name": "predictAndBetBNB",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "id", "type": "bytes32" },
      { "internalType": "uint256", "name": "price", "type": "uint256" }
    ],
    "name": "predictionCallback",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "id", "type": "uint256" },
          { "internalType": "uint64", "name": "price", "type": "uint64" }
        ],
        "internalType": "struct IPredictUpDown.SettlePrediction[]",
        "name": "arr",
        "type": "tuple[]"
      }
    ],
    "name": "settlePredictions",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "base", "type": "address" }],
    "name": "getPairByBaseV3",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "address", "name": "base", "type": "address" },
          { "internalType": "uint16", "name": "basePosition", "type": "uint16" },
          {
            "internalType": "enum IPairsManager.PairType",
            "name": "pairType",
            "type": "uint8"
          },
          {
            "internalType": "enum IPairsManager.PairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint256", "name": "maxLongOiUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxShortOiUsd", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "fundingFeePerBlockP",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "minFundingFeeR", "type": "uint256" },
          { "internalType": "uint256", "name": "maxFundingFeeR", "type": "uint256" },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "notionalUsd",
                "type": "uint256"
              },
              { "internalType": "uint16", "name": "tier", "type": "uint16" },
              { "internalType": "uint16", "name": "maxLeverage", "type": "uint16" },
              { "internalType": "uint16", "name": "initialLostP", "type": "uint16" },
              { "internalType": "uint16", "name": "liqLostP", "type": "uint16" }
            ],
            "internalType": "struct LibPairsManager.LeverageMargin[]",
            "name": "leverageMargins",
            "type": "tuple[]"
          },
          {
            "internalType": "uint16",
            "name": "slippageConfigIndex",
            "type": "uint16"
          },
          { "internalType": "uint16", "name": "slippagePosition", "type": "uint16" },
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              {
                "internalType": "uint256",
                "name": "onePercentDepthAboveUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "onePercentDepthBelowUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint16",
                "name": "slippageLongP",
                "type": "uint16"
              },
              {
                "internalType": "uint16",
                "name": "slippageShortP",
                "type": "uint16"
              },
              { "internalType": "uint16", "name": "index", "type": "uint16" },
              {
                "internalType": "enum SlippageType",
                "name": "slippageType",
                "type": "uint8"
              },
              { "internalType": "bool", "name": "enable", "type": "bool" }
            ],
            "internalType": "struct TransitionFacet.SlippageConfig",
            "name": "slippageConfig",
            "type": "tuple"
          },
          { "internalType": "uint16", "name": "feeConfigIndex", "type": "uint16" },
          { "internalType": "uint16", "name": "feePosition", "type": "uint16" },
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              { "internalType": "uint16", "name": "index", "type": "uint16" },
              { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
              { "internalType": "bool", "name": "enable", "type": "bool" },
              { "internalType": "uint24", "name": "shareP", "type": "uint24" },
              { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
            ],
            "internalType": "struct LibFeeManager.FeeConfig",
            "name": "feeConfig",
            "type": "tuple"
          },
          {
            "internalType": "uint40",
            "name": "longHoldingFeeRate",
            "type": "uint40"
          },
          {
            "internalType": "uint40",
            "name": "shortHoldingFeeRate",
            "type": "uint40"
          }
        ],
        "internalType": "struct TransitionFacet.PairView",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "pairsV3",
    "outputs": [
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "address", "name": "base", "type": "address" },
          { "internalType": "uint16", "name": "basePosition", "type": "uint16" },
          {
            "internalType": "enum IPairsManager.PairType",
            "name": "pairType",
            "type": "uint8"
          },
          {
            "internalType": "enum IPairsManager.PairStatus",
            "name": "status",
            "type": "uint8"
          },
          { "internalType": "uint256", "name": "maxLongOiUsd", "type": "uint256" },
          { "internalType": "uint256", "name": "maxShortOiUsd", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "fundingFeePerBlockP",
            "type": "uint256"
          },
          { "internalType": "uint256", "name": "minFundingFeeR", "type": "uint256" },
          { "internalType": "uint256", "name": "maxFundingFeeR", "type": "uint256" },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "notionalUsd",
                "type": "uint256"
              },
              { "internalType": "uint16", "name": "tier", "type": "uint16" },
              { "internalType": "uint16", "name": "maxLeverage", "type": "uint16" },
              { "internalType": "uint16", "name": "initialLostP", "type": "uint16" },
              { "internalType": "uint16", "name": "liqLostP", "type": "uint16" }
            ],
            "internalType": "struct LibPairsManager.LeverageMargin[]",
            "name": "leverageMargins",
            "type": "tuple[]"
          },
          {
            "internalType": "uint16",
            "name": "slippageConfigIndex",
            "type": "uint16"
          },
          { "internalType": "uint16", "name": "slippagePosition", "type": "uint16" },
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              {
                "internalType": "uint256",
                "name": "onePercentDepthAboveUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "onePercentDepthBelowUsd",
                "type": "uint256"
              },
              {
                "internalType": "uint16",
                "name": "slippageLongP",
                "type": "uint16"
              },
              {
                "internalType": "uint16",
                "name": "slippageShortP",
                "type": "uint16"
              },
              { "internalType": "uint16", "name": "index", "type": "uint16" },
              {
                "internalType": "enum SlippageType",
                "name": "slippageType",
                "type": "uint8"
              },
              { "internalType": "bool", "name": "enable", "type": "bool" }
            ],
            "internalType": "struct TransitionFacet.SlippageConfig",
            "name": "slippageConfig",
            "type": "tuple"
          },
          { "internalType": "uint16", "name": "feeConfigIndex", "type": "uint16" },
          { "internalType": "uint16", "name": "feePosition", "type": "uint16" },
          {
            "components": [
              { "internalType": "string", "name": "name", "type": "string" },
              { "internalType": "uint16", "name": "index", "type": "uint16" },
              { "internalType": "uint16", "name": "openFeeP", "type": "uint16" },
              { "internalType": "uint16", "name": "closeFeeP", "type": "uint16" },
              { "internalType": "bool", "name": "enable", "type": "bool" },
              { "internalType": "uint24", "name": "shareP", "type": "uint24" },
              { "internalType": "uint24", "name": "minCloseFeeP", "type": "uint24" }
            ],
            "internalType": "struct LibFeeManager.FeeConfig",
            "name": "feeConfig",
            "type": "tuple"
          },
          {
            "internalType": "uint40",
            "name": "longHoldingFeeRate",
            "type": "uint40"
          },
          {
            "internalType": "uint40",
            "name": "shortHoldingFeeRate",
            "type": "uint40"
          }
        ],
        "internalType": "struct TransitionFacet.PairView[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "protocolAddress", "type": "address" },
      { "internalType": "string", "name": "name", "type": "string" },
      { "internalType": "string", "name": "url", "type": "string" }
    ],
    "name": "ExistentPartner",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "protocolAddress", "type": "address" }
    ],
    "name": "NonexistentPartner",
    "type": "error"
  },
  { "inputs": [], "name": "ZeroAddress", "type": "error" },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "protocolAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "callbackReceiver",
        "type": "address"
      }
    ],
    "name": "UpdatePartnerCallbackReceiver",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "protocolAddress",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "name",
        "type": "string"
      }
    ],
    "name": "UpdatePartnerName",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "protocolAddress",
        "type": "address"
      },
      { "indexed": false, "internalType": "string", "name": "url", "type": "string" }
    ],
    "name": "UpdatePartnerUrl",
    "type": "event"
  },
  {
    "inputs": [
      { "internalType": "string", "name": "name", "type": "string" },
      { "internalType": "string", "name": "url", "type": "string" },
      { "internalType": "address", "name": "protocolAddress", "type": "address" },
      { "internalType": "address", "name": "callbackReceiver", "type": "address" }
    ],
    "name": "addPartner",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "address", "name": "user", "type": "address" },
      {
        "components": [
          { "internalType": "uint64", "name": "closePrice", "type": "uint64" },
          { "internalType": "int96", "name": "fundingFee", "type": "int96" },
          { "internalType": "uint96", "name": "closeFee", "type": "uint96" },
          { "internalType": "int96", "name": "pnl", "type": "int96" },
          { "internalType": "uint96", "name": "holdingFee", "type": "uint96" }
        ],
        "internalType": "struct CloseInfo",
        "name": "info",
        "type": "tuple"
      }
    ],
    "name": "afterClose",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      {
        "components": [
          { "internalType": "address", "name": "user", "type": "address" },
          {
            "internalType": "uint32",
            "name": "userOpenTradeIndex",
            "type": "uint32"
          },
          { "internalType": "uint64", "name": "entryPrice", "type": "uint64" },
          { "internalType": "address", "name": "pairBase", "type": "address" },
          { "internalType": "address", "name": "tokenIn", "type": "address" },
          { "internalType": "uint96", "name": "margin", "type": "uint96" },
          { "internalType": "uint64", "name": "stopLoss", "type": "uint64" },
          { "internalType": "uint64", "name": "takeProfit", "type": "uint64" },
          { "internalType": "uint24", "name": "broker", "type": "uint24" },
          { "internalType": "bool", "name": "isLong", "type": "bool" },
          { "internalType": "uint96", "name": "openFee", "type": "uint96" },
          {
            "internalType": "int256",
            "name": "longAccFundingFeePerShare",
            "type": "int256"
          },
          { "internalType": "uint96", "name": "executionFee", "type": "uint96" },
          { "internalType": "uint40", "name": "timestamp", "type": "uint40" },
          { "internalType": "uint80", "name": "qty", "type": "uint80" },
          { "internalType": "uint40", "name": "holdingFeeRate", "type": "uint40" },
          { "internalType": "uint256", "name": "openBlock", "type": "uint256" }
        ],
        "internalType": "struct ITrading.OpenTrade",
        "name": "ot",
        "type": "tuple"
      }
    ],
    "name": "afterMarketExecuted",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "bytes32", "name": "tradeHash", "type": "bytes32" },
      { "internalType": "address", "name": "user", "type": "address" },
      {
        "internalType": "enum ITradingChecker.Refund",
        "name": "refund",
        "type": "uint8"
      }
    ],
    "name": "afterMarketRefund",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "protocolAddress", "type": "address" }
    ],
    "name": "getPartnerByAddress",
    "outputs": [
      { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "string", "name": "url", "type": "string" },
          {
            "internalType": "address",
            "name": "protocolAddress",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "callbackReceiver",
            "type": "address"
          },
          { "internalType": "uint256", "name": "gasCost", "type": "uint256" }
        ],
        "internalType": "struct PartnerInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "start", "type": "uint256" },
      { "internalType": "uint8", "name": "length", "type": "uint8" }
    ],
    "name": "partners",
    "outputs": [
      { "internalType": "uint256", "name": "blockNumber", "type": "uint256" },
      {
        "components": [
          { "internalType": "string", "name": "name", "type": "string" },
          { "internalType": "string", "name": "url", "type": "string" },
          {
            "internalType": "address",
            "name": "protocolAddress",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "callbackReceiver",
            "type": "address"
          },
          { "internalType": "uint256", "name": "gasCost", "type": "uint256" }
        ],
        "internalType": "struct PartnerInfo[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "protocolAddress", "type": "address" },
      { "internalType": "address", "name": "callbackReceiver", "type": "address" }
    ],
    "name": "updatePartnerCallbackReceiver",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "protocolAddress", "type": "address" },
      { "internalType": "string", "name": "name", "type": "string" }
    ],
    "name": "updatePartnerName",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "protocolAddress", "type": "address" },
      { "internalType": "string", "name": "url", "type": "string" }
    ],
    "name": "updatePartnerUrl",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
